name: Validation du Contenu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Configuration de Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Validation du contenu
      run: |
        python tools/validation/validate_content.py

    - name: Vérification des liens
      run: |
        python tools/validation/validate_content.py --check-links

    - name: Vérification des images
      run: |
        python tools/validation/validate_content.py --check-images

    - name: Vérification du formatage
      run: |
        python tools/validation/validate_content.py --check-formatting

    - name: Génération de la documentation
      run: |
        python tools/interactive_docs/interactive_docs.py

    - name: Test des recommandations
      run: |
        python tools/recommendation/recommendation_engine.py --test

    - name: Upload des rapports
      uses: actions/upload-artifact@v2
      with:
        name: validation-reports
        path: |
          validation_report.md
          output/
          reports/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Configuration de Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Exécution des tests
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Upload de la couverture de code
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage.xml

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Configuration de Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort

    - name: Vérification du style de code
      run: |
        flake8 .
        black . --check
        isort . --check-only

  security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Configuration de Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installation des dépendances
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety

    - name: Vérification de sécurité
      run: |
        bandit -r .
        safety check 